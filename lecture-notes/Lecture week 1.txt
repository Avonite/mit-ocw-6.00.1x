Declarative knowledge: statements of facts
Imperative knowledge: a recipe or how-to find something

Algorithm: 
	1. Sequence of steps
	2. Control of flow: when to go to the next step
	3. Stop: when to stop with the steps

Basic computer architecture: 
	- Memory: stores data and instructions
	- Arithmetic logic unit: gets data from memory and performs simple operations
	- Control unit: keep track of at what place you are in the set of instructions. Program counter adds one and goes to the next step. Can be changed by a test.  
	- Output: the end of a sequence. 

Abstract methods to create new primitives. A primitive in a Turing machine is one of these six: left, move right, scan, print, write, do nothing

Everything that can be computed in a language can be computed in any other language. Only some things are easier to do in specific languages. 

Syntax: rules of the language, grammar in human languages
Static semantic: syntactically correct but has nog meaning
Semantics: what does a syntactically correct string of symbols with no static semantics mean

Data object:
	Scalar: cannot be subdivided. 
		4 types: int, string, bool, float and Nonetype
		can be checked by typing: type()
		can be changed e.g.: int(5.9) -> 5
	Non-scalar: have internal structure which can be accessed

Operators: such as +, -, **, /(result is float) and //(result is int, without remainder), %(prints the remainder)

Expressions: combine objects with operators to form expressions which have a value which have a type
	<object><operation><object>
	Precedence of operations:
			()
			**
			*
			/
			+
			-
			executed from left to right

Assign names to values or variables by using =. The name is on the left side, the value on the right. The value of names can be changed. The computer stored the last modified value. 

Comparison operators: returns either False or True
	<, >, <=, >=, == and !=
	use == for equality

Branching programs: test -> true or false -> if true do this, if false do this
	does not necessarily need to have a false block, just does nothing if condition is not met

Indentation: important to show which block of code belongs to a conditions and to see how the code get executed
	<condition>
		<expression>
		<expression>
if else elif

Variables: information can be stored and changed, names are descriptive, cannot use certain name (int float) to define a variable. 

Strings: sequences of characters (numbers and letters), use quotation marks " "
	strings can be added and multiplied
	length of a string: len(string)
	index: use [] after a string to get a certain piece of that string
		counting in python starts at 0
		use numbers, e.g.: 	[1:3] characters 2 and 3 from the string
					[:3] all characters up to the 4th character
					[1:] all characters starting from the second
					[:] gives a copy of the entire string, not a new string
					[a:b:c] gives string from a up to b with step size c
					[:-1] need to check this out

Output: use print() to print something to the screen, separate variables with a ,
Input: use variable = input("Type something"), prompt the user for an input and interpret it as a string, to change type use variable = input(int("Type something"))

Loops: are usefull when a block of code needs to be repeated a lot
	while loop: 	while <condition>
				<expression>
			tests for the conditon, while this is true it executes the code and tests again, if false loop is terminated 
	
	for loop: 	for <variable> in range[]
				<expression>
			less complicated as no variable needs to be defined or incremented 
			range: can also be used as range[start,stop,step]
			can also be used for characters in strings using char
	break		use to get out of the loop
	
	while loops are generally used if we can't predict the condition
	for loops when we know the computation

Iteration: the way the code is run each time through a loop is called iteration

Guess and check:
	Test for a certain condition, while it is true run the loop, if not not do something else. Inside the loop the tested variable needs to be changed, which is a guess. 
	In a for loop a range of values are tested and when a certain conditions is met the loop is ended. 
	


			
	

 


